#!highlight yaml
---
heat_template_version: 2013-05-23

description: >
  Two-tier application example.

parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers

  private_net_id:
    type: string
    description: the id of the private network to host application. 

resources:
  app1:
    type: OS::Nova::Server
    properties:
      name: app1
      image: 54bc392f-7489-4071-84c8-2753e7ffec54
      flavor: GP-Small
      key_name: { get_param: key_name }
      metadata: { "group": "app" }
      networks: 
      - { network: { get_param: private_net_id }, uuid: { get_param: private_net_id  } }

  app2:
    type: OS::Nova::Server
    properties:
      name: app2
      image: 54bc392f-7489-4071-84c8-2753e7ffec54
      flavor: GP-Small
      key_name: { get_param: key_name }
      metadata: { "group": "app" }
      networks: 
      - { network: { get_param: private_net_id }, uuid: { get_param: private_net_id  } }

  web1:
    type: OS::Nova::Server
    properties: 
     name: web1
     image: 54bc392f-7489-4071-84c8-2753e7ffec54
     flavor: GP-Small
     key_name: { get_param: key_name }
     metadata: { "group": "web" }
     networks: 
     - { network: { get_param: private_net_id }, uuid: { get_param: private_net_id  } }
   depends_on: [ app1, app2 ]

  web2:
    type: OS::Nova::Server
    properties: 
     name: web2
     image: 54bc392f-7489-4071-84c8-2753e7ffec54
     flavor: GP-Small
     key_name: { get_param: key_name }
     metadata: { "group": "web" }
     networks: 
     - { network: { get_param: private_net_id }, uuid: { get_param: private_net_id  } }
   depends_on: [ app1, app2 ]

#  lbpool:
#    type: OS::Neutron::Pool
#    properties:
#      lb_method: ROUND_ROBIN
#      name: webtier
#      protocol: HTTP
#      subnet_id: { get_resource: subnet }
#      vip: { "address": 192.168.10.50, "protocol_port": 80 }

#  lb:
#    type: OS::Neutron::LoadBalancer
#    properties:
#      members: [ { get_resource: web1 }, { get_resource: web2 } ]
#      pool_id: { get_resource: lbpool }
#      protocol_port: 80

#  ip:
#    type: OS::Neutron::FloatingIP
#    properties:
#      floating_network_id: 85abca57-4d2d-43b5-bcd3-eee47f619af8

  # See: https://ask.openstack.org/en/question/7344/heat-and-get_attr-function/
#  ipassoc:
#    type: OS::Neutron::FloatingIPAssociation
#    properties:
#     floatingip_id: { get_resource: ip }
#      port_id: {"Fn::Select": [ port_id, { get_attr: [ lbpool, vip]}]}